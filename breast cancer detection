{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOnSTj8tg56j5pp2QsGnKjV"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"X9WtEYYSUwFr"},"outputs":[],"source":["import numpy as np \n","import pandas as pd"]},{"cell_type":"code","source":["data_file='Breast cancer dataset.csv'\n","df=pd.read_csv(data_file)\n","df.head(10)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"id":"ZlU4icCIVCeh","executionInfo":{"status":"ok","timestamp":1667023500580,"user_tz":-330,"elapsed":2793,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"563dcb8a-5dbb-47ea-d271-ee0277cfebb2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         id diagnosis  radius_mean  texture_mean  perimeter_mean  area_mean  \\\n","0    842302         M        17.99         10.38          122.80     1001.0   \n","1    842517         M        20.57         17.77          132.90     1326.0   \n","2  84300903         M        19.69         21.25          130.00     1203.0   \n","3  84348301         M        11.42         20.38           77.58      386.1   \n","4  84358402         M        20.29         14.34          135.10     1297.0   \n","5    843786         M        12.45         15.70           82.57      477.1   \n","6    844359         M        18.25         19.98          119.60     1040.0   \n","7  84458202         M        13.71         20.83           90.20      577.9   \n","8    844981         M        13.00         21.82           87.50      519.8   \n","9  84501001         M        12.46         24.04           83.97      475.9   \n","\n","   smoothness_mean  compactness_mean  concavity_mean  concave points_mean  \\\n","0          0.11840           0.27760         0.30010              0.14710   \n","1          0.08474           0.07864         0.08690              0.07017   \n","2          0.10960           0.15990         0.19740              0.12790   \n","3          0.14250           0.28390         0.24140              0.10520   \n","4          0.10030           0.13280         0.19800              0.10430   \n","5          0.12780           0.17000         0.15780              0.08089   \n","6          0.09463           0.10900         0.11270              0.07400   \n","7          0.11890           0.16450         0.09366              0.05985   \n","8          0.12730           0.19320         0.18590              0.09353   \n","9          0.11860           0.23960         0.22730              0.08543   \n","\n","   ...  texture_worst  perimeter_worst  area_worst  smoothness_worst  \\\n","0  ...          17.33           184.60      2019.0            0.1622   \n","1  ...          23.41           158.80      1956.0            0.1238   \n","2  ...          25.53           152.50      1709.0            0.1444   \n","3  ...          26.50            98.87       567.7            0.2098   \n","4  ...          16.67           152.20      1575.0            0.1374   \n","5  ...          23.75           103.40       741.6            0.1791   \n","6  ...          27.66           153.20      1606.0            0.1442   \n","7  ...          28.14           110.60       897.0            0.1654   \n","8  ...          30.73           106.20       739.3            0.1703   \n","9  ...          40.68            97.65       711.4            0.1853   \n","\n","   compactness_worst  concavity_worst  concave points_worst  symmetry_worst  \\\n","0             0.6656           0.7119                0.2654          0.4601   \n","1             0.1866           0.2416                0.1860          0.2750   \n","2             0.4245           0.4504                0.2430          0.3613   \n","3             0.8663           0.6869                0.2575          0.6638   \n","4             0.2050           0.4000                0.1625          0.2364   \n","5             0.5249           0.5355                0.1741          0.3985   \n","6             0.2576           0.3784                0.1932          0.3063   \n","7             0.3682           0.2678                0.1556          0.3196   \n","8             0.5401           0.5390                0.2060          0.4378   \n","9             1.0580           1.1050                0.2210          0.4366   \n","\n","   fractal_dimension_worst  Unnamed: 32  \n","0                  0.11890          NaN  \n","1                  0.08902          NaN  \n","2                  0.08758          NaN  \n","3                  0.17300          NaN  \n","4                  0.07678          NaN  \n","5                  0.12440          NaN  \n","6                  0.08368          NaN  \n","7                  0.11510          NaN  \n","8                  0.10720          NaN  \n","9                  0.20750          NaN  \n","\n","[10 rows x 33 columns]"],"text/html":["\n","  <div id=\"df-6a40c87f-db5e-421b-81ba-59689ca80ea3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>diagnosis</th>\n","      <th>radius_mean</th>\n","      <th>texture_mean</th>\n","      <th>perimeter_mean</th>\n","      <th>area_mean</th>\n","      <th>smoothness_mean</th>\n","      <th>compactness_mean</th>\n","      <th>concavity_mean</th>\n","      <th>concave points_mean</th>\n","      <th>...</th>\n","      <th>texture_worst</th>\n","      <th>perimeter_worst</th>\n","      <th>area_worst</th>\n","      <th>smoothness_worst</th>\n","      <th>compactness_worst</th>\n","      <th>concavity_worst</th>\n","      <th>concave points_worst</th>\n","      <th>symmetry_worst</th>\n","      <th>fractal_dimension_worst</th>\n","      <th>Unnamed: 32</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>842302</td>\n","      <td>M</td>\n","      <td>17.99</td>\n","      <td>10.38</td>\n","      <td>122.80</td>\n","      <td>1001.0</td>\n","      <td>0.11840</td>\n","      <td>0.27760</td>\n","      <td>0.30010</td>\n","      <td>0.14710</td>\n","      <td>...</td>\n","      <td>17.33</td>\n","      <td>184.60</td>\n","      <td>2019.0</td>\n","      <td>0.1622</td>\n","      <td>0.6656</td>\n","      <td>0.7119</td>\n","      <td>0.2654</td>\n","      <td>0.4601</td>\n","      <td>0.11890</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>842517</td>\n","      <td>M</td>\n","      <td>20.57</td>\n","      <td>17.77</td>\n","      <td>132.90</td>\n","      <td>1326.0</td>\n","      <td>0.08474</td>\n","      <td>0.07864</td>\n","      <td>0.08690</td>\n","      <td>0.07017</td>\n","      <td>...</td>\n","      <td>23.41</td>\n","      <td>158.80</td>\n","      <td>1956.0</td>\n","      <td>0.1238</td>\n","      <td>0.1866</td>\n","      <td>0.2416</td>\n","      <td>0.1860</td>\n","      <td>0.2750</td>\n","      <td>0.08902</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>84300903</td>\n","      <td>M</td>\n","      <td>19.69</td>\n","      <td>21.25</td>\n","      <td>130.00</td>\n","      <td>1203.0</td>\n","      <td>0.10960</td>\n","      <td>0.15990</td>\n","      <td>0.19740</td>\n","      <td>0.12790</td>\n","      <td>...</td>\n","      <td>25.53</td>\n","      <td>152.50</td>\n","      <td>1709.0</td>\n","      <td>0.1444</td>\n","      <td>0.4245</td>\n","      <td>0.4504</td>\n","      <td>0.2430</td>\n","      <td>0.3613</td>\n","      <td>0.08758</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>84348301</td>\n","      <td>M</td>\n","      <td>11.42</td>\n","      <td>20.38</td>\n","      <td>77.58</td>\n","      <td>386.1</td>\n","      <td>0.14250</td>\n","      <td>0.28390</td>\n","      <td>0.24140</td>\n","      <td>0.10520</td>\n","      <td>...</td>\n","      <td>26.50</td>\n","      <td>98.87</td>\n","      <td>567.7</td>\n","      <td>0.2098</td>\n","      <td>0.8663</td>\n","      <td>0.6869</td>\n","      <td>0.2575</td>\n","      <td>0.6638</td>\n","      <td>0.17300</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>84358402</td>\n","      <td>M</td>\n","      <td>20.29</td>\n","      <td>14.34</td>\n","      <td>135.10</td>\n","      <td>1297.0</td>\n","      <td>0.10030</td>\n","      <td>0.13280</td>\n","      <td>0.19800</td>\n","      <td>0.10430</td>\n","      <td>...</td>\n","      <td>16.67</td>\n","      <td>152.20</td>\n","      <td>1575.0</td>\n","      <td>0.1374</td>\n","      <td>0.2050</td>\n","      <td>0.4000</td>\n","      <td>0.1625</td>\n","      <td>0.2364</td>\n","      <td>0.07678</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>843786</td>\n","      <td>M</td>\n","      <td>12.45</td>\n","      <td>15.70</td>\n","      <td>82.57</td>\n","      <td>477.1</td>\n","      <td>0.12780</td>\n","      <td>0.17000</td>\n","      <td>0.15780</td>\n","      <td>0.08089</td>\n","      <td>...</td>\n","      <td>23.75</td>\n","      <td>103.40</td>\n","      <td>741.6</td>\n","      <td>0.1791</td>\n","      <td>0.5249</td>\n","      <td>0.5355</td>\n","      <td>0.1741</td>\n","      <td>0.3985</td>\n","      <td>0.12440</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>844359</td>\n","      <td>M</td>\n","      <td>18.25</td>\n","      <td>19.98</td>\n","      <td>119.60</td>\n","      <td>1040.0</td>\n","      <td>0.09463</td>\n","      <td>0.10900</td>\n","      <td>0.11270</td>\n","      <td>0.07400</td>\n","      <td>...</td>\n","      <td>27.66</td>\n","      <td>153.20</td>\n","      <td>1606.0</td>\n","      <td>0.1442</td>\n","      <td>0.2576</td>\n","      <td>0.3784</td>\n","      <td>0.1932</td>\n","      <td>0.3063</td>\n","      <td>0.08368</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>84458202</td>\n","      <td>M</td>\n","      <td>13.71</td>\n","      <td>20.83</td>\n","      <td>90.20</td>\n","      <td>577.9</td>\n","      <td>0.11890</td>\n","      <td>0.16450</td>\n","      <td>0.09366</td>\n","      <td>0.05985</td>\n","      <td>...</td>\n","      <td>28.14</td>\n","      <td>110.60</td>\n","      <td>897.0</td>\n","      <td>0.1654</td>\n","      <td>0.3682</td>\n","      <td>0.2678</td>\n","      <td>0.1556</td>\n","      <td>0.3196</td>\n","      <td>0.11510</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>844981</td>\n","      <td>M</td>\n","      <td>13.00</td>\n","      <td>21.82</td>\n","      <td>87.50</td>\n","      <td>519.8</td>\n","      <td>0.12730</td>\n","      <td>0.19320</td>\n","      <td>0.18590</td>\n","      <td>0.09353</td>\n","      <td>...</td>\n","      <td>30.73</td>\n","      <td>106.20</td>\n","      <td>739.3</td>\n","      <td>0.1703</td>\n","      <td>0.5401</td>\n","      <td>0.5390</td>\n","      <td>0.2060</td>\n","      <td>0.4378</td>\n","      <td>0.10720</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>84501001</td>\n","      <td>M</td>\n","      <td>12.46</td>\n","      <td>24.04</td>\n","      <td>83.97</td>\n","      <td>475.9</td>\n","      <td>0.11860</td>\n","      <td>0.23960</td>\n","      <td>0.22730</td>\n","      <td>0.08543</td>\n","      <td>...</td>\n","      <td>40.68</td>\n","      <td>97.65</td>\n","      <td>711.4</td>\n","      <td>0.1853</td>\n","      <td>1.0580</td>\n","      <td>1.1050</td>\n","      <td>0.2210</td>\n","      <td>0.4366</td>\n","      <td>0.20750</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 33 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6a40c87f-db5e-421b-81ba-59689ca80ea3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6a40c87f-db5e-421b-81ba-59689ca80ea3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6a40c87f-db5e-421b-81ba-59689ca80ea3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["x=df.iloc[:,2:-1].values\n","y=df['diagnosis'].values"],"metadata":{"id":"SafMjzwAVP0q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(x),print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3v1dX2WjWrPG","executionInfo":{"status":"ok","timestamp":1667023505064,"user_tz":-330,"elapsed":7,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"48e06648-16a0-498a-d123-03344528064d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[1.799e+01 1.038e+01 1.228e+02 ... 2.654e-01 4.601e-01 1.189e-01]\n"," [2.057e+01 1.777e+01 1.329e+02 ... 1.860e-01 2.750e-01 8.902e-02]\n"," [1.969e+01 2.125e+01 1.300e+02 ... 2.430e-01 3.613e-01 8.758e-02]\n"," ...\n"," [1.660e+01 2.808e+01 1.083e+02 ... 1.418e-01 2.218e-01 7.820e-02]\n"," [2.060e+01 2.933e+01 1.401e+02 ... 2.650e-01 4.087e-01 1.240e-01]\n"," [7.760e+00 2.454e+01 4.792e+01 ... 0.000e+00 2.871e-01 7.039e-02]]\n","['M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M'\n"," 'M' 'B' 'B' 'B' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M'\n"," 'M' 'B' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'M'\n"," 'M' 'B' 'M' 'M' 'B' 'B' 'B' 'B' 'M' 'B' 'M' 'M' 'B' 'B' 'B' 'B' 'M' 'B'\n"," 'M' 'M' 'B' 'M' 'B' 'M' 'M' 'B' 'B' 'B' 'M' 'M' 'B' 'M' 'M' 'M' 'B' 'B'\n"," 'B' 'M' 'B' 'B' 'M' 'M' 'B' 'B' 'B' 'M' 'M' 'B' 'B' 'B' 'B' 'M' 'B' 'B'\n"," 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'M' 'M' 'B' 'M' 'M' 'B' 'B' 'B'\n"," 'M' 'M' 'B' 'M' 'B' 'M' 'M' 'B' 'M' 'M' 'B' 'B' 'M' 'B' 'B' 'M' 'B' 'B'\n"," 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'M'\n"," 'M' 'B' 'M' 'B' 'B' 'M' 'M' 'B' 'B' 'M' 'M' 'B' 'B' 'B' 'B' 'M' 'B' 'B'\n"," 'M' 'M' 'M' 'B' 'M' 'B' 'M' 'B' 'B' 'B' 'M' 'B' 'B' 'M' 'M' 'B' 'M' 'M'\n"," 'M' 'M' 'B' 'M' 'M' 'M' 'B' 'M' 'B' 'M' 'B' 'B' 'M' 'B' 'M' 'M' 'M' 'M'\n"," 'B' 'B' 'M' 'M' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'M' 'M' 'B' 'B' 'M'\n"," 'B' 'B' 'M' 'M' 'B' 'M' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'M' 'B'\n"," 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'M' 'B' 'B' 'B' 'B'\n"," 'B' 'B' 'M' 'B' 'M' 'B' 'B' 'M' 'B' 'B' 'M' 'B' 'M' 'M' 'B' 'B' 'B' 'B'\n"," 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'M' 'B' 'M' 'B' 'B' 'B'\n"," 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'M' 'B' 'M'\n"," 'B' 'B' 'B' 'B' 'M' 'M' 'M' 'B' 'B' 'B' 'B' 'M' 'B' 'M' 'B' 'M' 'B' 'B'\n"," 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'M' 'M' 'B' 'B' 'B' 'B' 'B' 'B'\n"," 'B' 'B' 'B' 'B' 'B' 'M' 'M' 'B' 'M' 'M' 'M' 'B' 'M' 'M' 'B' 'B' 'B' 'B'\n"," 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'M' 'B' 'B' 'M' 'M' 'B' 'B'\n"," 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B'\n"," 'M' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B'\n"," 'M' 'M' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'M' 'B' 'M' 'B' 'B' 'M'\n"," 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'M' 'B' 'B' 'B' 'B' 'B' 'B'\n"," 'M' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'B'\n"," 'B' 'M' 'B' 'M' 'B' 'B' 'M' 'B' 'B' 'B' 'B' 'B' 'M' 'M' 'B' 'M' 'B' 'M'\n"," 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'B' 'M' 'B' 'M' 'B' 'M' 'M' 'B' 'B' 'B' 'M'\n"," 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'M' 'B' 'M' 'M' 'B' 'B' 'B'\n"," 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B' 'B'\n"," 'B' 'B' 'B' 'B' 'M' 'M' 'M' 'M' 'M' 'M' 'B']\n"]},{"output_type":"execute_result","data":{"text/plain":["(None, None)"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import confusion_matrix,classification_report"],"metadata":{"id":"NKcA1-bUWsdH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#setting up the lables\n","X_train,X_test,Y_train,Y_test=train_test_split(x,y,test_size=0.2,random_state=12)"],"metadata":{"id":"gd8cKVJpYW9F"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = LogisticRegression()"],"metadata":{"id":"f5wBV9vNzQTu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yIIhHFpXzTCI","executionInfo":{"status":"ok","timestamp":1667023509990,"user_tz":-330,"elapsed":15,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"2fd2f386-9bfb-4c42-ccba-76b11bd7c2a1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_logistic.py:818: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  extra_warning_msg=_LOGISTIC_SOLVER_CONVERGENCE_MSG,\n"]},{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)"],"metadata":{"id":"KAipYG0_zVcd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##LOGISTIC REGRESSION\n"],"metadata":{"id":"SMIU6tY5zfIc"}},{"cell_type":"code","source":["print(classification_report(Y_test,y_pred,digits=4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ov_zlwU1zZHh","executionInfo":{"status":"ok","timestamp":1667023510689,"user_tz":-330,"elapsed":6,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"4b2c2b9c-edd1-41e5-c834-618064f62193"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           B     0.8919    1.0000    0.9429        66\n","           M     1.0000    0.8333    0.9091        48\n","\n","    accuracy                         0.9298       114\n","   macro avg     0.9459    0.9167    0.9260       114\n","weighted avg     0.9374    0.9298    0.9286       114\n","\n"]}]},{"cell_type":"code","source":["cm = confusion_matrix(Y_test, y_pred)\n","print(\"Confusion matrix is\",cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N9bufq1wzbDu","executionInfo":{"status":"ok","timestamp":1667023511288,"user_tz":-330,"elapsed":9,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"42d595a8-59d2-48fa-de4e-8b354209ee58"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Confusion matrix is [[66  0]\n"," [ 8 40]]\n"]}]},{"cell_type":"markdown","source":["##DECISION TREE"],"metadata":{"id":"MeUK72lUz0OZ"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","dt=DecisionTreeClassifier()\n","dt.fit(X_train,Y_train)\n","y_pred2=dt.predict(X_test)\n"],"metadata":{"id":"M1qeo6rtzdz0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(classification_report(Y_test,y_pred2,digits=4))\n","cm = confusion_matrix(Y_test, y_pred2)\n","print(\"Confusion matrix is\",cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"id6mof-sz-Ip","executionInfo":{"status":"ok","timestamp":1667023516591,"user_tz":-330,"elapsed":4,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"3053c0b2-38b1-4d01-eaa4-754825828087"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           B     0.9412    0.9697    0.9552        66\n","           M     0.9565    0.9167    0.9362        48\n","\n","    accuracy                         0.9474       114\n","   macro avg     0.9488    0.9432    0.9457       114\n","weighted avg     0.9476    0.9474    0.9472       114\n","\n","Confusion matrix is [[64  2]\n"," [ 4 44]]\n"]}]},{"cell_type":"markdown","source":["##GAUSSIAN NAIVE BAYES"],"metadata":{"id":"FPxErh8p0C4q"}},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","gnb=GaussianNB()\n","y_pre3 = gnb.fit(X_train,Y_train).predict(X_test)\n","\n","print(classification_report(Y_test,y_pre3,digits=4))\n","cm = confusion_matrix(Y_test, y_pre3)\n","print(\"Confusion matrix is\",cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aFzZ6r0W0E-i","executionInfo":{"status":"ok","timestamp":1667023517369,"user_tz":-330,"elapsed":15,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"dea8a989-52f2-45e4-c47a-cbc7eecf6729"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           B     0.9041    1.0000    0.9496        66\n","           M     1.0000    0.8542    0.9213        48\n","\n","    accuracy                         0.9386       114\n","   macro avg     0.9521    0.9271    0.9355       114\n","weighted avg     0.9445    0.9386    0.9377       114\n","\n","Confusion matrix is [[66  0]\n"," [ 7 41]]\n"]}]},{"cell_type":"markdown","source":["##KNN WITH n_neighbor value 3"],"metadata":{"id":"hbgFz1tt0KTV"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier "],"metadata":{"id":"vXZFe_Ml0OkD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","neigh = KNeighborsClassifier(n_neighbors=3)\n","neigh.fit(X_train,Y_train)\n","y_pred4=neigh.predict(X_test)\n","print(\"for n neighbors 3\",classification_report(Y_test,y_pred4,digits=4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lqOFwamF0RaL","executionInfo":{"status":"ok","timestamp":1667023517371,"user_tz":-330,"elapsed":12,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"4a91d07e-36b5-487f-ed0f-315a53212ec5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["for n neighbors 3               precision    recall  f1-score   support\n","\n","           B     0.8649    0.9697    0.9143        66\n","           M     0.9500    0.7917    0.8636        48\n","\n","    accuracy                         0.8947       114\n","   macro avg     0.9074    0.8807    0.8890       114\n","weighted avg     0.9007    0.8947    0.8930       114\n","\n"]}]},{"cell_type":"markdown","source":["##knn using n_neighbors value 6\n","\n"],"metadata":{"id":"rlZmjUCm0XPm"}},{"cell_type":"code","source":["neigh = KNeighborsClassifier(n_neighbors=6)\n","neigh.fit(X_train,Y_train)\n","y_pred5=neigh.predict(X_test)\n","print(\"for n neighbors 6\",classification_report(Y_test,y_pred5,digits=4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"snxoh3810TDT","executionInfo":{"status":"ok","timestamp":1667023525974,"user_tz":-330,"elapsed":12,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"17aa0aeb-8f2f-4369-9975-192359a398ad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["for n neighbors 6               precision    recall  f1-score   support\n","\n","           B     0.8421    0.9697    0.9014        66\n","           M     0.9474    0.7500    0.8372        48\n","\n","    accuracy                         0.8772       114\n","   macro avg     0.8947    0.8598    0.8693       114\n","weighted avg     0.8864    0.8772    0.8744       114\n","\n"]}]},{"cell_type":"markdown","source":["##knn using n_neighbors value9"],"metadata":{"id":"MLFkRlMV0gwv"}},{"cell_type":"code","source":["neigh = KNeighborsClassifier(n_neighbors=9)\n","neigh.fit(X_train,Y_train)\n","y_pred6=neigh.predict(X_test)\n","print(\"for n neighbors 9\",classification_report(Y_test,y_pred6,digits=4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ErFfHXun0Z6a","executionInfo":{"status":"ok","timestamp":1667023525975,"user_tz":-330,"elapsed":10,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"5aeeb1a2-269d-46c4-bb87-1dd5ea246505"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["for n neighbors 9               precision    recall  f1-score   support\n","\n","           B     0.8767    0.9697    0.9209        66\n","           M     0.9512    0.8125    0.8764        48\n","\n","    accuracy                         0.9035       114\n","   macro avg     0.9140    0.8911    0.8986       114\n","weighted avg     0.9081    0.9035    0.9021       114\n","\n"]}]},{"cell_type":"markdown","source":["## svm using using rbf kernel"],"metadata":{"id":"hniEO2I20qYz"}},{"cell_type":"code","source":["from sklearn.svm import SVC"],"metadata":{"id":"dvEiLvdh0hY4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["m1=SVC(kernel='rbf')\n","m1.fit(X_train,Y_train)\n","y_predk=m1.predict(X_test)\n","print(\"for rbf kernel\",classification_report(Y_test,y_predk,digits=4))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2ye1xINa0q7x","executionInfo":{"status":"ok","timestamp":1667023526983,"user_tz":-330,"elapsed":1014,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"781456cc-5695-48f2-bdc2-5aa708f78947"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["for rbf kernel               precision    recall  f1-score   support\n","\n","           B     0.8354    1.0000    0.9103        66\n","           M     1.0000    0.7292    0.8434        48\n","\n","    accuracy                         0.8860       114\n","   macro avg     0.9177    0.8646    0.8769       114\n","weighted avg     0.9047    0.8860    0.8821       114\n","\n"]}]},{"cell_type":"markdown","source":["##Svm using poly kernel"],"metadata":{"id":"Yi55eHHo00lw"}},{"cell_type":"code","source":["m2=SVC(kernel='poly')\n","m2.fit(X_train,Y_train)\n","y_predp=m2.predict(X_test)\n","print(\"for polynomial kernel with degree3 \",classification_report(Y_test,y_predp,digits=4))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pbxa6HWa0wXs","executionInfo":{"status":"ok","timestamp":1667023526984,"user_tz":-330,"elapsed":5,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"fbc279fa-9fe9-438c-dec2-e78e9f536e4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["for polynomial kernel with degree3                precision    recall  f1-score   support\n","\n","           B     0.8250    1.0000    0.9041        66\n","           M     1.0000    0.7083    0.8293        48\n","\n","    accuracy                         0.8772       114\n","   macro avg     0.9125    0.8542    0.8667       114\n","weighted avg     0.8987    0.8772    0.8726       114\n","\n"]}]},{"cell_type":"markdown","source":["##Svm using linear kernel"],"metadata":{"id":"CVNJXALT0-K-"}},{"cell_type":"code","source":["m3=SVC(kernel='linear')\n","m3.fit(X_train,Y_train)\n","y_predl=m3.predict(X_test)\n","print(\"for linear kernel \",classification_report(Y_test,y_predl,digits=4))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XSNfLkc-0-zz","executionInfo":{"status":"ok","timestamp":1667023530569,"user_tz":-330,"elapsed":1333,"user":{"displayName":"charan aluri","userId":"12799988902135797122"}},"outputId":"88530401-3dff-411e-dda9-4a8c4345272e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["for linear kernel                precision    recall  f1-score   support\n","\n","           B     0.9167    1.0000    0.9565        66\n","           M     1.0000    0.8750    0.9333        48\n","\n","    accuracy                         0.9474       114\n","   macro avg     0.9583    0.9375    0.9449       114\n","weighted avg     0.9518    0.9474    0.9468       114\n","\n"]}]}]}